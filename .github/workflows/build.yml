name: build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v3.0.8
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install Dependencies
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Types
        run: npm run types

      - name: Test
        run: npm run test:ci

      - name: Build
        run: npm run build

      - name: Create aws package
        run: npm run postbuild

      - uses: actions/upload-artifact@v3
        with:
          name: fizzbuzz_aws_lambda
          path: ./dist/package.zip

      - name: 'Terraform Init'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 0.12.13
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'terraform'
          tf_actions_comment: true
          args: '-backend-config "key=fizzbuzz-training-terraform.tfstate" -migrate-state'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}          
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}             

      - name: Terraform Validate
        uses: hashicorp/terraform-github-actions/validate@v0.3.7
    
      - name: Terraform Apply
        uses: hashicorp/terraform-github-actions/apply@v0.4.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_ACTION_WORKING_DIR: 'terraform'
          AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_ACCESS_KEY }}